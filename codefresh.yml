version: '1.0'
steps:
    start_clean:
        title: Clean up CodeFresh volume
        # Images come from hierarchy at: https://github.com/docker-library/python
        image: python:3.10-slim
        commands:
            - rm -rf '${{CF_REPO_NAME}}' venv

    clone_leaf-common:
        type: git-clone
        title: Clone leaf-common
        repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
        revision: '${{CF_REVISION}}'
        git: github

    install_dependencies_and_setup:
        title: Install dependencies and setup security
        image: python:3.10-slim
        shell: bash
        description: >-
            1. Create a virtualenv inside the CodeFresh workspace
               so that it is transferable between freestyle steps.
            2. Install python dependencies
        commands:
            - export VENV=./venv/codefresh
            - mkdir -p $VENV
            - pip install pip==23.0.1
            - pip install virtualenv==20.21.0
            - export VENV_CMD=`which virtualenv`
            - $VENV_CMD $VENV
            - source $VENV/bin/activate
            - pip install pip==23.0.1
            - pip install virtualenv==20.21.0
            - cd '${{CF_REPO_NAME}}'
            - pip --no-cache-dir install -r requirements.txt
            - pip --no-cache-dir install -r requirements-build.txt
            - pip -V
            - export PYTHONPATH=$PWD

    run_all_tests:
        type: parallel
        steps:
            run_pylint:
                title: Run pylint
                image: python:3.10-slim
                description: "Run Pylint"
                # Allow the pipeline to continue if this step fails
                fail_fast: false
                shell: bash
                commands:
                    - export VENV=./venv/codefresh
                    - source $VENV/bin/activate
                    - echo "PATH=$PATH"
                    - cd '${{CF_REPO_NAME}}'
                    - build_scripts/run_pylint.sh

            run_flake8:
                title: Run flake8
                image: python:3.10-slim
                description: Run Flake8
                fail_fast: false
                shell: bash
                commands:
                    - export VENV=./venv/codefresh
                    - source $VENV/bin/activate
                    - echo "PATH=$PATH"
                    - cd '${{CF_REPO_NAME}}'
                    - build_scripts/run_flake8.sh

            run_unit_tests:
                title: Run unit tests
                image: python:3.10-slim
                shell: bash
                description: Run unit tests (pytests)
                commands:
                    - export VENV=./venv/codefresh
                    - source $VENV/bin/activate
                    - cd '${{CF_REPO_NAME}}'
                    - export PYTHONPATH=$PWD
                    - echo "PYTHONPATH=$PYTHONPATH"
                    - export PYTEST_CMD=`which pytest`
                    - echo "PYTEST=$PYTEST_CMD"
                    - $PYTEST_CMD --verbose -m "not integration" --timer-top-n 10

    all_test_status:
        title: Check For Failed Tests
        description: "Handle any fail cases that may have occurred"
        image: alpine:3.13.1
        commands:
            - exit 1
        when:
            condition:
                any:
                    static_test_fail:
                        steps.run_pylint.result == 'failure' ||
                        steps.run_flake8.result == 'failure' ||
                        steps.run_unit_tests == 'failure' ||
                        steps.run_all_tests == 'failure'
    
    build_wheel:
        title: Build wheel file
        image: python:3.10-slim
        shell: bash
        description: Build wheel file for distribution
        commands:
            - export VENV=./venv/codefresh
            - source $VENV/bin/activate
            - pip install build wheel
            - cd '${{CF_REPO_NAME}}'
            - python -m build --wheel
            - export TEMP_DIR_OUTSIDE_CONTAINER=${{CF_VOLUME_PATH}}/tmp/${{CF_BUILD_ID}}
            - mkdir -p ${TEMP_DIR_OUTSIDE_CONTAINER}
            - mv dist/leaf_common*.whl ${TEMP_DIR_OUTSIDE_CONTAINER}

    push_wheel_to_release:
        title: Push wheel file to Release archive
        image: alpine:3.13.1
        commands:
            - ls ${TEMP_DIR_OUTSIDE_CONTAINER}
        
    end_clean:
        title: Clean up CodeFresh volume
        image: python:3.10-slim
        commands:
            - rm -rf '${{CF_REPO_NAME}}' venv
